.IFJcode24
DEFVAR GF@$R0
DEFVAR GF@$F0
DEFVAR GF@$B0
DEFVAR GF@$S0
DEFVAR GF@$R1
DEFVAR GF@$R2
DEFVAR GF@$F1
DEFVAR GF@$F2
DEFVAR GF@$B1
DEFVAR GF@$B2
DEFVAR GF@$S1
DEFVAR GF@$S2
JUMP main
LABEL PrintString
PUSHFRAME
DEFVAR LF@s
MOVE LF@s LF@PARAM0
WRITE LF@s
WRITE string@\010
POPFRAME
RETURN
LABEL PrintInt
PUSHFRAME
DEFVAR LF@n
MOVE LF@n LF@PARAM0
WRITE LF@n
WRITE string@\010
POPFRAME
RETURN
LABEL IsPrime
PUSHFRAME
DEFVAR LF@divisor
DEFVAR LF@n
MOVE LF@n LF@PARAM0
LABEL $if0
PUSHS LF@n
PUSHS int@2
LTS
POPS GF@$B0
CLEARS
JUMPIFEQ $else0 GF@$B0 bool@false
PUSHS int@0
POPFRAME
RETURN
JUMP $endif0
LABEL $else0
LABEL $endif0
MOVE LF@divisor int@2
LABEL $while0
PUSHS LF@divisor
PUSHS LF@n
LTS
POPS GF@$B0
CLEARS
JUMPIFEQ $endwhile0 GF@$B0 bool@false
LABEL $if1
PUSHS LF@n
PUSHS LF@divisor
IDIVS
PUSHS LF@divisor
MULS
PUSHS LF@n
EQS
POPS GF@$B0
CLEARS
JUMPIFEQ $else1 GF@$B0 bool@false
PUSHS int@0
POPFRAME
RETURN
JUMP $endif1
LABEL $else1
PUSHS LF@divisor
PUSHS int@1
ADDS
POPS LF@divisor
CLEARS
LABEL $endif1
JUMP $while0
LABEL $endwhile0
PUSHS int@1
POPFRAME
RETURN
LABEL main
CREATEFRAME
PUSHFRAME
DEFVAR LF@valid
DEFVAR LF@cnt
DEFVAR LF@error_msg
DEFVAR LF@input
DEFVAR LF@INPUT
DEFVAR LF@is_prime
MOVE LF@valid int@0
MOVE LF@cnt int@0
MOVE LF@error_msg string@Invalid\032input.\032Please\032enter\032a\032positive\032integer\032above\0321\032and\032below\0325010\010
WRITE string@Enter\032a\032positive\032integer\032above\0322\032and\032below\0325010:\032
READ LF@input int
LABEL $while1
PUSHS LF@valid
PUSHS int@0
EQS
POPS GF@$B0
CLEARS
JUMPIFEQ $endwhile1 GF@$B0 bool@false
LABEL $if2
JUMPIFEQ $else2 LF@input nil@nil
MOVE LF@INPUT LF@input
LABEL $if3
PUSHS LF@INPUT
PUSHS int@1
GTS
POPS GF@$B0
CLEARS
JUMPIFEQ $else3 GF@$B0 bool@false
LABEL $if4
PUSHS LF@INPUT
PUSHS int@5010
LTS
POPS GF@$B0
CLEARS
JUMPIFEQ $else4 GF@$B0 bool@false
MOVE LF@valid int@1
LABEL $while2
PUSHS LF@INPUT
PUSHS int@5010
LTS
POPS GF@$B0
CLEARS
JUMPIFEQ $endwhile2 GF@$B0 bool@false
CREATEFRAME
DEFVAR TF@PARAM0
MOVE TF@PARAM0 LF@INPUT
CALL IsPrime
POPS LF@is_prime
CLEARS
LABEL $if5
PUSHS LF@is_prime
PUSHS int@1
EQS
POPS GF@$B0
CLEARS
JUMPIFEQ $else5 GF@$B0 bool@false
PUSHS LF@cnt
PUSHS int@1
ADDS
POPS LF@cnt
CLEARS
WRITE LF@INPUT
WRITE string@\010
JUMP $endif5
LABEL $else5
LABEL $endif5
PUSHS LF@INPUT
PUSHS int@1
ADDS
POPS LF@INPUT
CLEARS
JUMP $while2
LABEL $endwhile2
JUMP $endif4
LABEL $else4
CREATEFRAME
DEFVAR TF@PARAM0
MOVE TF@PARAM0 LF@error_msg
CALL PrintString
READ LF@input int
LABEL $endif4
JUMP $endif3
LABEL $else3
CREATEFRAME
DEFVAR TF@PARAM0
MOVE TF@PARAM0 LF@error_msg
CALL PrintString
READ LF@input int
LABEL $endif3
JUMP $endif2
LABEL $else2
CREATEFRAME
DEFVAR TF@PARAM0
MOVE TF@PARAM0 LF@error_msg
CALL PrintString
READ LF@input int
LABEL $endif2
JUMP $while1
LABEL $endwhile1
WRITE string@Number\032of\032prime\032numbers:\032
CREATEFRAME
DEFVAR TF@PARAM0
MOVE TF@PARAM0 LF@cnt
CALL PrintInt
EXIT int@0
