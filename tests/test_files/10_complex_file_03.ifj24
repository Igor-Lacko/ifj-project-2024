const ifj = @import("ifj24.zig");

pub fn main() void {
    var a: i32 = 10;
    var b: i32 = 20;
    var c: ?i32 = null;
    var d: ?i32 = 30;

    var i: i32 = 0;
    while (i < 5) {
        i = i + 1;
        ifj.write(i);
    }

    var j: ?i32 = 0;

    if (a < b) {
        ifj.write("a is less than b"); // Expected output: "a is less than b"
    } else {
        ifj.write("a is not less than b");
    }

    if (c == null) {
        ifj.write("c is null"); // Expected output: "c is null"
    } else {
        ifj.write("c is not null");
    }

    var sum_result: i32 = add(a, b);
    ifj.write(sum_result); // Expected output: 30

    print_message("Hello from IFJ24!");

    var str1: []u8 = ifj.string("Hello, ");
    var str2: []u8 = ifj.string("World!");
    var concatenated: []u8 = ifj.concat(str1, str2);
    ifj   .    write(concatenated); // Expected output: "Hello, World!"

    return;
}

fn add(x: i32, y: i32) i32 {
    return x + y;
}

fn print_message(msg: []u8) void {
    ifj.write(msg);
    return;
}